version: "3.8"
services:

  db-auth:
    image: postgres
    container_name: db-auth
    environment:
      POSTGRES_PASSWORD: root
    expose: 
      - '5432'
    ports:
      - '5430:5432'
    networks:
      - backend 
    volumes:
      - ./db_init_scripts/auth:/docker-entrypoint-initdb.d/

  db:
    image: postgres
    container_name: postgres
    environment:
      POSTGRES_PASSWORD: root
    expose: 
      - '5432'
    ports:
      - '5432:5432'
    networks:
      - backend 
    volumes:
      - ./db_init_scripts/profile:/docker-entrypoint-initdb.d/

  db-profile-management:
    image: postgres
    container_name: db-profile-management
    environment:
      POSTGRES_PASSWORD: root
    expose: 
      - '5432'
    ports:
      - '5431:5432'
    networks:
      - backend 
    volumes:
      - ./db_init_scripts/:/docker-entrypoint-initdb.d/

  db-story:
    image: "redis:alpine"
    container_name: db-story
    command: redis-server
    ports:
      - "6379:6379"
    environment:
      - REDIS_REPLICATION_MODE=master
      - ALLOW_EMPTY_PASSWORD=yes
    networks:
      - backend

  db-post:
    image: "redis:alpine"
    container_name: db-post
    command: redis-server
    ports:
      - "6399:6379"
    environment:
      - REDIS_REPLICATION_MODE=master
      - ALLOW_EMPTY_PASSWORD=yes
    networks:
      - backend

  profile-service:
    image: profile-service
    build:
      context: ./Microservices/profile-service
      dockerfile: Dockerfile
    networks:
      - backend
    environment:
      - HOST_NAME=db
    expose: 
      - '8085'
    ports: 
      - '8085:8085'

  profile-management-service:
    image: profile-management-service
    build:
      context: ./Microservices/profile-management-service
      dockerfile: Dockerfile
    networks:
      - backend
    environment:
      - HOST_NAME=db-profile-management
    expose: 
      - '8087'
    ports: 
      - '8087:8087'

  story-service:
    image: story-service
    build:
      context: ./Microservices/story-service
      dockerfile: Dockerfile
    networks:
      - backend
    environment:
      - HOST_NAME=db-story
    expose: 
      - '8083'
    ports: 
      - '8083:8083'

  post-service:
    image: post-service
    build:
      context: ./Microservices/post-service
      dockerfile: Dockerfile
    networks:
      - backend
    environment:
      - HOST_NAME=db-post
    expose: 
      - '8086'
    ports: 
      - '8086:8086'

  auth-service:
    image: auth-service
    build:
      context: ./Microservices/auth-service
      dockerfile: Dockerfile
    networks:
      - backend
    environment:
      - HOST_NAME=db-auth
    expose: 
      - '8080'
    ports: 
      - '8080:8080'

networks:
  backend:
    name: nistagram
    driver: bridge