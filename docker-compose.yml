version: "3.8"
services:

  db:
    image: postgres
    container_name: postgres
    environment:
      POSTGRES_PASSWORD: root
    expose: 
      - '5432'
    ports:
      - '5432:5432'
    networks:
      - backend 
    volumes:
      - ./db_init_scripts/profile:/docker-entrypoint-initdb.d/

  db-profile-management:
    image: postgres
    container_name: db-profile-management
    environment:
      POSTGRES_PASSWORD: root
    expose: 
      - '5432'
    ports:
      - '5431:5432'
    networks:
      - backend 
    volumes:
      - ./db_init_scripts/:/docker-entrypoint-initdb.d/

  db-messages:
    image : mongo
    container_name: db-messages
    environment:
    - PUID=1000
    - PGID=1000
    ports:
    - 27017:27017
    networks:
      - backend
    restart: unless-stopped

  db-story:
    image: "redis:alpine"
    container_name: db-story
    command: redis-server
    ports:
      - "6379:6379"
    environment:
      - REDIS_REPLICATION_MODE=master
      - ALLOW_EMPTY_PASSWORD=yes
    networks:
      - backend

  profile-service:
    image: profile-service
    build:
      context: ./Microservices/profile-service
      dockerfile: Dockerfile
    networks:
      - backend
    environment:
      - HOST_NAME=db
    expose: 
      - '8085'
    ports: 
      - '8085:8085'

  profile-management-service:
    image: profile-management-service
    build:
      context: ./Microservices/profile-management-service
      dockerfile: Dockerfile
    networks:
      - backend
    environment:
      - HOST_NAME=db-profile-management
    expose: 
      - '8087'
    ports: 
      - '8087:8087'

  messages-service:
    image: messages-service
    build:
      context: ./Microservices/messages-service
      dockerfile: Dockerfile
    networks:
      - backend
    environment:
      - HOST_NAME=db-messages
    expose: 
      - '8002'
    ports: 
      - '8002:8002'

  story-service:
    image: story-service
    build:
      context: ./Microservices/story-service
      dockerfile: Dockerfile
    networks:
      - backend
    environment:
      - HOST_NAME=db-story
    expose: 
      - '8083'
    ports: 
      - '8083:8083'

networks:
  backend:
    name: nistagram
    driver: bridge